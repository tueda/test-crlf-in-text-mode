name: Test

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  test:
    name: Test ${{ matrix.os }}-${{ matrix.compiler }}${{ matrix.suffix }}
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: ${{ matrix.shell }} {0}
    strategy:
      fail-fast: false
      matrix:
        include:
          - {os: ubuntu-20.04, shell: bash, compiler: gcc}
          - {os: ubuntu-20.04, shell: bash, compiler: clang}
          - {os: macos-11, shell: bash, compiler: gcc}
          - {os: windows-2019, shell: msys2, compiler: gcc, suffix: -msys2}
          - {os: windows-2019, shell: bash, compiler: cl.exe, suffix: -msvc}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies (Windows, MSYS2)
        if: runner.os == 'Windows' && matrix.shell == 'msys2'
        uses: msys2/setup-msys2@v2
        with:
          update: true
          install: >-
            cmake
            make
            mingw-w64-x86_64-gcc
            python3

      - name: Set up Clang
        if: matrix.compiler == 'clang'
        uses: egor-tensin/setup-clang@v1
        with:
          version: 15

      - name: Set up Python
        if: runner.os != 'Windows' || matrix.shell == 'msys2'
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Set up MSVC path (Windows, MSVC)
        if: runner.os == 'Windows' && matrix.shell == 'bash'
        uses: ilammy/msvc-dev-cmd@v1

      - name: Build
        run: |
          CC=${{ matrix.compiler }} cmake -S . -B build
          cmake --build build

      - name: Test
        run: |
          $(find build -type f -executable -name 'main*' 2>/dev/null || echo build/main)
          python3 check.py out.txt
